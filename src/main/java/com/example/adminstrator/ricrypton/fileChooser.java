package com.example.adminstrator.ricrypton;

/**
 * Created by Richard on 4/4/2016.
 */

import java.io.File;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.text.DateFormat;
import android.os.Bundle;
import android.app.ListActivity;
import android.content.Intent;
import android.view.View;
import android.widget.ListView;
import android.os.Environment;

public class fileChooser extends ListActivity
{
    private File currentDirectory;
    private FileArrayAdapter adapter;
    @Override
    public void onCreate(Bundle saveInstanceState)
    {
        super.onCreate(saveInstanceState);
        currentDirectory=Environment.getExternalStorageDirectory();
        fill(currentDirectory);
    }
    private void fill(File file)
    {
        //create an array of files and directories from external storage
        File [] dirs=file.listFiles();
        //set title for the for current directory
        this.setTitle("Current Dir:"+file.getName());
        //create arrayLists of items to store all directories and files
        List <Item>dir=new ArrayList<Item>();
        List <Item> fls=new ArrayList<Item>();

        try
        {
            //loop through all files in directory array
            for (File ff:dirs)
            {
                //reference the last modified date of files and directory
                Date lastModifiedDate=new Date(ff.lastModified());
                //create date format object
                DateFormat formatter=DateFormat.getDateTimeInstance();
                //format the last modified date
                String dateModified=formatter.format(lastModifiedDate);
                //determine if the contents of directory array is a directory
                if (ff.isDirectory()){
                    //list all files in directory and store in a file array called fileBuf, then define a variable to hold the length of file
                    File [] fileBuf=ff.listFiles();
                    int fileBufLength=0;
                    //determine if fileBuff contains an item
                    if (fileBuf!=null)
                    {
                        //store the length of fileBuf in fileBufferLength
                        fileBufLength=fileBuf.length;
                    }
                    //if fileBuf is null, then set its length to 0
                    else
                        fileBufLength=0;

                    //set number of Items in the directory to string value of filebufLength
                    String numOfItem=String.valueOf(fileBufLength);
                    //if length of fileBuff is 0 or 1, concatenate "item" to numOfItem
                    if(fileBufLength==0 || fileBufLength==1)
                        numOfItem=numOfItem+"item";
                    //else concatenate items to the value of numOfItem
                    else
                        numOfItem=numOfItem+"items";
                    //add details (file name, number of item, last date modified,  file path and directory icon) to directory arrayList
                    dir.add(new Item(ff.getName(),numOfItem,dateModified,ff.getAbsolutePath(),"directory_icon"));
                }
                //if any content of directory array is not a directory
                else
                {
                    //then add such content to file arrayList
                    fls.add(new Item(ff.getName(),ff.length()+"Byte",dateModified,ff.getAbsolutePath(),"file_icon"));
                }
                }

        }
        catch (Exception e)
        {

        }
        //sort contents of directory and file arrayList
        Collections.sort(dir);
        Collections.sort(fls);
        dir.addAll(fls);

        if(!file.getName().equalsIgnoreCase(Environment.getExternalStorageDirectory().toString()))
            dir.add(0,new Item("..","Parent Directory","", file.getParent(),"directory_up"));
        adapter=new FileArrayAdapter(fileChooser.this,R.layout.file_chooser_layout,dir);
        this.setListAdapter(adapter);


    }
    @Override
    protected void onListItemClick(ListView l,View v, int position, long id)
    {
        //TODO AUTOGENERATED METHOD STUB
        super.onListItemClick(l,v,position,id);
        Item o=adapter.getItem(position);
        if (o.getImage().equalsIgnoreCase("directory_icon")||o.getImage().equalsIgnoreCase("directory_up"))
        {
            currentDirectory=new File(o.getPath());
            fill(currentDirectory);
        }
        else
        {
            onFileClick(o);
        }
    }
    private void onFileClick(Item o)
    {
        Intent intent=new Intent();
        intent.putExtra("GetPath",currentDirectory.toString());
        intent.putExtra("GetFileName",o.getName());
        setResult(RESULT_OK,intent);
        finish();
    }
}
